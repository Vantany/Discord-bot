import os
import discord
from discord.ext import commands
import dotenv
import aiohttp
import requests
import random
from data import db_session
from data.games import Game
import base64
from io import BytesIO
from PIL import Image
from imagegenerate import ImageApi
from langchain.schema import HumanMessage, SystemMessage
from langchain.chat_models.gigachat import GigaChat
from dotenv import load_dotenv

load_dotenv()

KANDINSKY_API_KEY = os.getenv("KANDINSKY_API_KEY")
KANDINSKY_SECRET_KEY = os.getenv("KANDINSKY_SECRET_KEY")
TOKEN_BOT = os.getenv("TOKEN_BOT")
TOKEN_API = os.getenv("TOKEN_API")

bot = commands.Bot(command_prefix='!', intents=discord.Intents.all())
chat = GigaChat(credentials=TOKEN_API, verify_ssl_certs=False)

messages = [
    SystemMessage(
        content="–¢—ã –≤–µ–¥—É—â–∏–π –∏–≥—Ä—ã Dungeon and Dragons, —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏ –∏ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∏–≥—Ä–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è "
                "—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–≥—Ä—ã."
    )
]
base_message = messages


@bot.event
async def master():
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')


@bot.event
async def on_member_join(member):
    await member.send('–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ Dungeon and Dragons, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä —Ñ–µ–Ω—Ç–µ–∑–∏ ')

    for ch in bot.get_guild(member.guild.id).channels:
        if ch.name == 'ü§úwelcomeü§õ':
            await bot.get_channel(ch.id).send(f'{member}, –†–∞–¥ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–∫–∞–∑–æ—á–Ω–æ–º –º–∏—Ä–µ!')


@bot.command()
async def master(ctx: commands.Context, *, prompt: str):
    global messages, chat
    messages.append(HumanMessage(content=prompt))
    res = chat(messages)
    messages.append(res)
    await ctx.send(res.content)


@bot.command()
async def info(ctx):
    await ctx.send("""–î–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n
    !master (prompt) - –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–æ—Ç—É –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞\n
    !new_story - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–∞—Å–∫–∞–∑—á–∏–∫–æ–º""")


@bot.command()
async def new_story(ctx):
    global messages, base_message
    messages = base_message
    db_sess = db_session.create_session()
    game = Game()
    id = random.randint(1, 1000)
    while db_sess.query(Game).filter(Game.id == id).first():
        id = random.randint(1, 1000)
    game.make_new(id)
    db_sess.commit()
    channelname = f"Game ‚Ññ{game.id}"
    mbed = discord.Embed(title="–ö–∞–Ω–∞–ª –¥–ª—è –≤–∞—à–µ–π –∏–≥—Ä—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω", description=f"–ñ–µ–ª–∞–µ–º —É–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª {channelname}")
    category = discord.utils.get(ctx.message.guild.categories, id = 1180585027046735872)
    await category.create_text_channel(f"{channelname}")
    await ctx.send(embed = mbed)


@bot.command()
async def image_generate(ctx: commands.Context, *, prompt: str):
    api = ImageApi(KANDINSKY_API_KEY, KANDINSKY_SECRET_KEY)
    model_id = api.get_model()
    uuid = api.generate(prompt, model_id)
    images = api.check_generation(uuid)
    decoded_bytes = base64.b64decode(images[0])
    im = Image.open(BytesIO(decoded_bytes))
    im.save('decoded_image.jpg')
    with open('decoded_image.jpg', 'rb') as f:
        picture = discord.File(f)
        await ctx.send(file=picture)


if __name__ == "__main__":
    db_session.global_init("main")
    bot.run(TOKEN_BOT)